@model WebApplication008.Models.UsuariosModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

    if (IsPost)
    {
        if ((List<SelectListItem>)ViewData["items"] != null)
        {
            List<SelectListItem> items = new List<SelectListItem>();
            foreach (var item in (List<SelectListItem>)ViewData["items"])
            {
                if (item.Text == "Administrador")
                {
                    items.Add(new SelectListItem { Text = "Administrador", Value = "Administrador", Selected = true });
                    items.Add(new SelectListItem { Text = "Docente", Value = "Docente" });
                    items.Add(new SelectListItem { Text = "Estudiante", Value = "Estudiante" });
                }

                if (item.Text == "Docente")
                {
                    items.Add(new SelectListItem { Text = "Administrador", Value = "Administrador" });
                    items.Add(new SelectListItem { Text = "Docente", Value = "Docente", Selected = true });
                    items.Add(new SelectListItem { Text = "Estudiante", Value = "Estudiante" });
                }

                if (item.Text == "Estudiante")
                {
                    items.Add(new SelectListItem { Text = "Administrador", Value = "Administrador" });
                    items.Add(new SelectListItem { Text = "Docente", Value = "Docente" });
                    items.Add(new SelectListItem { Text = "Estudiante", Value = "Estudiante", Selected = true });
                }
            }

            ViewBag.Rol = items;
        }
        else
        {
            List<SelectListItem> items = new List<SelectListItem>();
            items.Add(new SelectListItem { Text = "Administrador", Value = "Administrador" });
            items.Add(new SelectListItem { Text = "Docente", Value = "Docente" });
            items.Add(new SelectListItem { Text = "Estudiante", Value = "Estudiante" });
            ViewBag.Rol = items;
        }
    }
    else
    {
        if ((List<SelectListItem>)ViewData["items"] == null)
        {
            List<SelectListItem> items = new List<SelectListItem>();
            items.Add(new SelectListItem { Text = "Administrador", Value = "Administrador" });
            items.Add(new SelectListItem { Text = "Docente", Value = "Docente" });
            items.Add(new SelectListItem { Text = "Estudiante", Value = "Estudiante" });
            ViewBag.Rol = items;
        }
        else
        {
            ViewBag.Rol = ViewData["items"];
        }
    }
}

@*<h2>Editar</h2>*@
<br /><br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">    
    <h4>Editar Usuarios</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id_usuario)

    <div class="form-group">
        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rol, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownList("Rol", @ViewBag.Rol as IEnumerable<SelectListItem>, "", new { @class = "form-control" })*@
            @*@Html.EditorFor(model => model.Rol, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownList("Rol", null, String.Empty, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Rol, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-outline-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Regresar al Listado", "Index")    
</div>